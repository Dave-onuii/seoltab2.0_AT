name: Test and Allure Report

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # 수동 실행 허용

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🐍 Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
          cache: 'pip'

      - name: 📦 Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: 📥 Install Allure
        run: |
          sudo wget https://github.com/allure-framework/allure2/releases/download/2.35.1/allure-2.35.1.tgz
          sudo tar -zxvf allure-2.35.1.tgz -C /opt/
          sudo ln -s /opt/allure-2.35.1/bin/allure /usr/bin/allure
          allure --version

      - name: 🧪 Run tests (Dummy only for CI)
        run: |
          # CI 환경에서는 더미 테스트만 실행 (Appium 연결 없음)
          pytest tests/test_dummy.py --auto-report --slack
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        continue-on-error: true

      - name: 📊 Upload Allure Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-results
          path: allure-results/
          retention-days: 30

      - name: 📊 Upload Allure Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: allure-report/
          retention-days: 30

      - name: 🌐 Deploy to GitHub Pages
        if: always() && github.ref == 'refs/heads/main'
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./allure-report
          publish_branch: gh-pages
          destination_dir: reports/${{ github.run_number }}
          keep_files: true

      - name: 📢 Send Slack Notification (GitHub Pages)
        if: always() && github.ref == 'refs/heads/main'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          REPORT_URL="https://dave-onuii.github.io/seoltab2.0_AT/reports/${{ github.run_number }}/index.html"

          # 테스트 결과 파싱 (간단한 버전)
          BRANCH="${{ github.ref_name }}"
          COMMIT="${{ github.sha }}"
          ACTOR="${{ github.actor }}"

          # Slack 메시지 전송
          curl -X POST "$SLACK_WEBHOOK_URL" \
            -H "Content-Type: application/json" \
            -d "{
              \"text\": \"✅ GitHub Actions: Allure 리포트가 생성되었습니다!\",
              \"attachments\": [{
                \"color\": \"good\",
                \"fields\": [
                  {
                    \"title\": \"실행 정보\",
                    \"value\": \"🌿 Branch: ${BRANCH}\\n👤 Actor: ${ACTOR}\\n🔢 Run: #${{ github.run_number }}\",
                    \"short\": true
                  },
                  {
                    \"title\": \"📊 Allure 리포트\",
                    \"value\": \"<${REPORT_URL}|리포트 보기>\",
                    \"short\": false
                  },
                  {
                    \"title\": \"Commit\",
                    \"value\": \"\`${COMMIT:0:7}\`\",
                    \"short\": false
                  }
                ],
                \"footer\": \"설탭 2.0 테스트 자동화 (GitHub Actions)\",
                \"ts\": $(date +%s)
              }]
            }"
